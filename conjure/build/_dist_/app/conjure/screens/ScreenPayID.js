import h from"./ScreenBase.js";import s from"./elements/ScreenElementButton.js";import"./elements/ScreenElementLabelled.js";import l from"./elements/ScreenElementJSONTree.js";import n from"./elements/ScreenElementScroll.js";import i from"./elements/ScreenElementText.js";export default class a extends h{constructor(t,e){super(t,e);this.payIDHandler=this.screenManager.conjure.getProfile().getServiceManager().getService("PayID").payIDHandler,this.buttonWidth=.4,this.buttonHeight=.1,this.panelWidth=.7,this.panelHeight=this.height-.4,this.background.visible=!0,this.group.add(this.background),this.selectedDomain=void 0,this.selectedAccount=void 0,this.selectedWallet=void 0,this.refreshDomains=this.refreshDomains.bind(this),this.refreshAccounts=this.refreshAccounts.bind(this),this.refreshWallets=this.refreshWallets.bind(this),this.addDomain=this.addDomain.bind(this),this.removeDomain=this.removeDomain.bind(this),this.addAccount=this.addAccount.bind(this),this.removeAccount=this.removeAccount.bind(this),this.createAccount=this.createAccount.bind(this),this.updateAccount=this.updateAccount.bind(this),this.addWallet=this.addWallet.bind(this),this.removeWallet=this.removeWallet.bind(this),this.setActiveWallet=this.setActiveWallet.bind(this),this.domainsLabel=new i(this,this,{x:-this.width/2+.4,y:this.height/2-.1,width:this.buttonWidth,height:.1,text:"Domains"}),this.registerElement(this.domainsLabel),this.domainsPanel=new n(this,this,{x:-this.width/2+.4,y:.05,width:this.panelWidth,height:this.panelHeight,scrollSide:"left"}),this.registerElement(this.domainsPanel),this.addDomainButton=new s(this,this,{x:-this.width/2+.4,y:-this.height/2+.2,width:this.buttonWidth,height:this.buttonHeight,text:"Add"}),this.addDomainButton.setOnClickCallback(this.addDomain),this.registerElement(this.addDomainButton),this.removeDomainButton=new s(this,this,{x:-this.width/2+.4,y:-this.height/2+.05,width:this.buttonWidth,height:this.buttonHeight,text:"Remove"}),this.removeDomainButton.setOnClickCallback(this.removeDomain),this.registerElement(this.removeDomainButton),this.accountsLabel=new i(this,this,{x:-.4,y:this.height/2-.1,width:this.buttonWidth,height:.1,text:"Accounts"}),this.registerElement(this.accountsLabel),this.accountsLabel.setHidden(!0),this.accountsPanel=new n(this,this,{x:-.4,y:.05,width:this.panelWidth,height:this.panelHeight,scrollSide:"left"}),this.registerElement(this.accountsPanel),this.addAccountButton=new s(this,this,{x:-.4,y:-this.height/2+.2,width:this.buttonWidth,height:this.buttonHeight,text:"Add"}),this.addAccountButton.setOnClickCallback(this.addAccount),this.registerElement(this.addAccountButton),this.removeAccountButton=new s(this,this,{x:-.4,y:-this.height/2+.05,width:this.buttonWidth,height:this.buttonHeight,text:"Remove"}),this.removeAccountButton.setOnClickCallback(this.removeAccount),this.registerElement(this.removeAccountButton),this.walletsLabel=new i(this,this,{x:.2,y:this.height/2-.1,width:this.buttonWidth,height:.1,text:"Wallets"}),this.registerElement(this.walletsLabel),this.walletsLabel.setHidden(!0),this.walletsPanel=new n(this,this,{x:.2,y:.05,width:this.panelWidth,height:this.panelHeight,scrollSide:"left"}),this.registerElement(this.walletsPanel),this.setActiveWalletButton=new s(this,this,{x:.2,y:-this.height/2+.05,width:this.buttonWidth,height:this.buttonHeight,text:"Make Active"}),this.setActiveWalletButton.setOnClickCallback(this.setActiveWallet),this.registerElement(this.setActiveWalletButton),this.infoLabel=new i(this,this,{x:this.width/2-.5,y:this.height/2-.1,width:this.buttonWidth,height:.1,text:"Wallet Information"}),this.registerElement(this.infoLabel),this.infoLabel.setHidden(!0),this.infoPanel=new l(this,this,{x:this.width/2-.5,y:-.1,width:this.panelWidth+.2,height:this.panelHeight+.3}),this.infoPanel.setSchema(this.getSchema()),this.registerElement(this.infoPanel)}addDomain(){this.screenManager.screenTextEntry.setTitle("Add Domain"),this.screenManager.screenTextEntry.setCallback(t=>{if(!t)return;this.payIDHandler.addDomain(t),this.selectedDomain=void 0,this.refreshDomains()}),this.screenManager.showScreen(this.screenManager.screenTextEntry)}removeDomain(){if(this.selectedDomain){if(!this.payIDHandler.removeDomain(this.selectedDomain.getDomain()))return;this.selectedDomain=void 0,this.refreshDomains()}}async addAccount(){if(!this.selectedDomain)return;this.screenManager.screenTextEntry.setTitle("Add Account"),this.screenManager.screenTextEntry.setCallback(async t=>{if(!await this.payIDHandler.addAccount(this.selectedDomain,t))return;this.selectedAccount=void 0,this.selectedWallet=void 0,this.refreshAccounts()}),this.screenManager.showScreen(this.screenManager.screenTextEntry)}removeAccount(){this.selectedAccount&&(this.payIDHandler.removeAccount(this.selectedDomain,this.selectedAccount),this.selectedAccount=void 0,this.selectedWallet=void 0,this.refreshAccounts())}async createAccount(){if(!this.selectedDomain)return;this.screenManager.screenTextEntry.setTitle("Add Account"),this.screenManager.screenTextEntry.setCallback(async t=>{if(!await this.payIDHandler.createAccount(this.selectedDomain,t))return;this.selectedAccount=void 0,this.selectedWallet=void 0,this.refreshAccounts()})}async updateAccount(){if(this.selectedAccount){if(!await this.payIDHandler.updateAccount(this.selectedDomain,this.selectedAccount))return;this.selectedAccount=void 0,this.selectedWallet=void 0,this.refreshAccounts()}}async addWallet(){if(!this.selectedAccount)return;this.screenManager.screenTextEntry.setTitle("Add Wallet"),this.screenManager.screenTextEntry.setCallback(async t=>{if(!await this.payIDHandler.addWallet(this.selectedDomain,this.selectedAccount,t))return;this.selectedWallet=void 0,this.refreshWallets()}),this.screenManager.showScreen(this.screenManager.screenTextEntry)}async removeWallet(){this.selectedWallet&&(this.selectedAccount.removeWallet(this.selectedDomain,this.selectedAccount,this.selectedWallet),this.selectedWallet=void 0,this.refreshWallets())}setActiveWallet(){this.payIDHandler.setActiveID(this.selectedDomain,this.selectedAccount)}refreshDomains(){this.domainsPanel.removeAllItems();for(let t of this.payIDHandler.getDomains()){let e=new s(this,this.domainsPanel,{width:this.buttonWidth,height:this.buttonHeight,text:t.getDomain()});e.setOnClickCallback(()=>{this.domainsPanel.unSelectAll(),this.selectedDomain===t?(e.setSelected(!1),this.selectedDomain=void 0):(e.setSelected(!0),this.selectedDomain=t),this.refreshAccounts()}),this.domainsPanel.registerItem(e)}this.domainsPanel.updateItems(),this.refreshAccounts()}refreshAccounts(){if(this.accountsPanel.removeAllItems(),this.selectedAccount=void 0,this.selectedWallet=void 0,this.selectedDomain){this.accountsLabel.setHidden(!1),this.addAccountButton.setHidden(!1),this.removeAccountButton.setHidden(!1);for(let t of this.selectedDomain.getAccounts()){let e=new s(this,this.accountsPanel,{width:this.buttonWidth,height:this.buttonHeight,text:t.getAccount()});e.setOnClickCallback(()=>{this.accountsPanel.unSelectAll(),this.selectedAccount===t?(e.setSelected(!1),this.selectedAccount=void 0):(e.setSelected(!0),this.selectedAccount=t),this.refreshWallets()}),this.accountsPanel.registerItem(e)}}else this.accountsLabel.setHidden(!0),this.addAccountButton.setHidden(!0),this.removeAccountButton.setHidden(!0);this.accountsPanel.updateItems(),this.refreshWallets()}refreshWallets(){if(this.walletsPanel.removeAllItems(),this.selectedWallet=void 0,this.selectedAccount){this.walletsLabel.setHidden(!1);for(let t of this.selectedAccount.getWallets()){let e=new s(this,this.walletsPanel,{width:this.buttonWidth,height:this.buttonHeight,text:t.getAddress()});e.setOnClickCallback(()=>{this.walletsPanel.unSelectAll(),this.selectedWallet===t?(e.setSelected(!1),this.selectedWallet=void 0):(e.setSelected(!0),this.selectedWallet=t),this.refreshInfo()}),this.walletsPanel.registerItem(e)}}else this.walletsLabel.setHidden(!0);this.walletsPanel.updateItems(),this.refreshInfo()}refreshInfo(){this.selectedWallet?(this.infoPanel.setHidden(!1),this.infoLabel.setHidden(!1),this.infoPanel.updateTree(this.selectedWallet.getInfo())):(this.infoPanel.setHidden(!0),this.infoLabel.setHidden(!0))}showScreen(t){super.showScreen(t),this.refreshDomains()}update(t){super.update(t)}getSchema(){return{paymentNetwork:{type:"static",label:"Network"},environment:{type:"static",label:"Environment"},addressDetailsType:{type:"static",label:"Details Type"},addressDetails:{type:"json",label:"addressDetails",key:"addressDetails",items:{address:{type:"static",label:"Address"},tag:{type:"static",label:"Tag"}}}}}}
