import{isNode as r,EventDispatcher as o,isWebWorker as a}from"../../web_modules/@AssetSync/common.js";import n from"./backend/Assets.js";import c from"./backend/Realms.js";import h from"./backend/Profiles.js";export default async function(s){new d(s)}class d extends o{constructor({assetSync:s,worldSync:e}){super();this.assetSync=s,this.worldSync=e,this.start()}async start(){this.assets=new n(this.assetSync),this.realms=new c(this.assetSync),await this.realms.initialise(),this.profiles=new h(this.assetSync),this.assetSync.dhtPlugin.dht.on("put",(s,e,t)=>{console.log("Received dht entry "+s);const i=s.split(":");switch(i[0]){case this.realms.dhtType:this.realms.receiveFromDHT(s,e,t);break;case this.assets.dhtType:this.assets.receiveFromDHT(s,e,t);break;default:break}}),this.assetSync.dhtPlugin.dht.on("removed",(s,e)=>{console.log("Removed dht entry "+s);const t=s.split(":");switch(t[0]){case this.realms.dhtType:this.realms.receiveFromDHT(s);break;case this.assets.dhtType:this.assets.receiveFromDHT(s);break;default:break}}),r||(a&&(worldSync.addFunction("requestPointerLock"),worldSync.addFunction("exitPointerLock"),worldSync.addFunction("hasFocus")),this.loadConjure())}async loadConjure(){const{startConjure:s}=await import("./conjure/Conjure.js");s(this)}}
