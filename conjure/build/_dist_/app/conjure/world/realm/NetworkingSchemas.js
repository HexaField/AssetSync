import*as e from"../../../../../web_modules/@geckos.io/typed-array-buffer-schema.js";export const NETWORKING_OPCODES={HEARTBEAT:0,USER:{METADATA:100,MOVE:101,ANIMATION:102}};const c=e.BufferSchema.schema("position",{x:e.float32,y:e.float32,z:e.float32}),f=e.BufferSchema.schema("velocity",{x:e.float32,y:e.float32,z:e.float32}),n=e.BufferSchema.schema("quaternion",{_x:e.float32,_y:e.float32,_z:e.float32,_w:e.float32});export class NetworkingSchemas{constructor(){this.schemas={},this.schemaIDs={},this.addSchema(NETWORKING_OPCODES.USER.METADATA,{username:e.string16}),this.addSchema(NETWORKING_OPCODES.USER.MOVE,{position:c,rotation:n,velocity:f}),this.addSchema(NETWORKING_OPCODES.USER.ANIMATION,{name:e.string16,fadeTime:e.float32,once:e.uint8,startTime:e.float32})}addSchema(s,a){const t=e.BufferSchema.schema(s,a),o=new e.Model(t);this.schemas[s]={model:o,schema:t},this.schemaIDs[t.id]={model:o,schema:t}}toBuffer(s,a){if(!this.schemas[s])return;const t=new Uint8Array(this.schemas[s].model.toBuffer(a));return t}fromBuffer(s){const a=new Uint8Array(s);if(a.length<5)return{};const t=i(a.buffer);if(!this.schemaIDs[t])return{};const o=this.schemaIDs[t].model.fromBuffer(a.buffer),r=this.schemaIDs[t].schema.name;return{opcode:r,content:o}}}function i(s){const a=new DataView(s);let t="";for(let o=0;o<5;o++){const r=a.getUint8(o);t+=String.fromCharCode(r)}return t}
