import t from"./services/ServiceManager.js";export default class a{constructor(e){this.conjure=e,this.isLoaded=!1,this.lastUpdated=0,this.profileData={},this.makeDefaultProfile(),this.serviceManager=new t(e)}makeDefaultProfile(){this.profileData={id:Date.now(),username:"New User "+Math.round(Math.random()*1e4)}}getServiceManager(){return this.serviceManager}getProfile(){return this.profileData}getID(){return this.profileData.id}getUsername(){return this.profileData.username}setUsername(e){this.profileData.username=e,this.conjure.getWorld().sendData(REALM_PROTOCOLS.USER.UPDATE,{username:this.getUsername()})}createProfile(){if(this.isLoaded)return;this.saveProfile(),this.sendToPeers(),this.setProfileLoaded(!0)}removeProfile(){if(!this.isLoaded)return;this.makeDefaultProfile(),this.setProfileLoaded(!1)}sendToPeers(){}loadFromPeer(e){if(e.timestamp<this.lastUpdated)return;this.lastUpdated=e.timestamp,console.log(e.data),e.data.profile&&this.setProfileFromDatabase(e.data.profile),e.data.services&&this.getServiceManager().setServicesFromDatabase(e.data.services)}async loadFromDatabase(){return;if(!data||data.timestamp<this.lastUpdated||!data.data)return}saveProfile(){}setProfileFromDatabase(e){this.profileData=e,this.setProfileLoaded(!0),this.conjure.getGlobalHUD().log("Successfully loaded profile!")}setProfileLoaded(e){this.conjure.getScreens().screenProfile.setProfileLoaded(e),this.isLoaded=e,e&&this.conjure.getScreens().screenProfile.setProfileName(this.getUsername())}}
