import*as o from"https://cdn.skypack.dev/pin/three@v0.117.1-NetLzdTnw9ga3y6o633U/min/three.js";import*as a from"../../../../../../web_modules/discord-oauth2.js";import r from"../../../util/randombytes/index.js";export default class c{constructor(e){this.serviceHandler=e,this.loader=new o.FileLoader,this.userData=void 0,this.accessDiscord=this.accessDiscord.bind(this),this.loggedIn=!1}tryConnect(){this.load("discord-info.txt",this.accessDiscord)}load(e,t){this.loader.load(e,s=>{t(s)},s=>{},s=>{console.error("Failed to load discord key, could not log in.")})}async logOut(){if(!this.loggedIn)return;let e=JSON.parse(self.basicStorage.getItem("discordAccessToken"));const t=Buffer.from(`${this.clientId}:${this.clientSecret}`).toString("base64"),s=await this.oauth.revokeToken(e.access_token,t);await self.simpleStorage.del("discordAccessToken"),this.userData=void 0,this.setLoggedIn(!1)}async accessDiscord(e){let t=e.split(`
`);if(this.clientId=t[0],this.clientSecret=t[1],this.oauth=new a({clientId:this.clientId,clientSecret:this.clientSecret,redirectUri:location.origin+"/success.html"}),this.url=this.oauth.generateAuthUrl({scope:"identify guilds",state:r(16).toString("hex")}),window.localStorage.getItem("discordAccessToken")){let s=JSON.parse(await self.simpleStorage.get("discordAccessToken"));try{const i=this.oauth.tokenRequest({refreshToken:s.refresh_token,grantType:"refresh_token",scope:"identify guilds"});i&&(console.log("Successfully logged into discord with refresh token!"),await self.simpleStorage.set("discordAccessToken",JSON.stringify(i)),this.setLoggedIn(!0),await this.getUser(i))}catch(i){console.log(i),await self.simpleStorage.clear("discordAccessToken"),this.userData=void 0,this.setLoggedIn(!1)}}}async logInToDiscord(){this.loggedIn?this.logOut():(window.addEventListener("message",async e=>{if(e.data.message==="deliverResult"){let t=new URL(e.data.result).searchParams;await this.logIn(t.get("code"),t.get("state")),e.source.close()}}),window.open(this.url,"Login"))}async logIn(e,t){try{const s=this.oauth.tokenRequest({code:e,scope:"identity guilds",grantType:"authorization_code"});s&&(console.log("Successfully logged into discord!"),await self.simpleStorage.set("discordAccessToken",JSON.stringify(s)),this.setLoggedIn(!0),await this.getUser(s))}catch(s){console.log(s),await self.simpleStorage.del("discordAccessToken"),this.userData=void 0,this.setLoggedIn(!1)}}async getUser(e){const t=await this.oauth.getUser(e.access_token);this.userData=t,this.serviceHandler.setData({discordName:this.userData.username,discordID:this.userData.id})}async getUserGuilds(){return await new Promise(async(e,t)=>{try{const s=await this.oauth.getUserGuilds(JSON.parse(await self.simpleStorage.get("discordAccessToken")).access_token);e(s)}catch(s){t(s)}})}setLoggedIn(e){this.loggedIn=e,this.serviceHandler.setLinked(e)}}
