import a from"../ScreenBase.js";import s from"../elements/ScreenElementButton.js";import{CONJURE_MODE as c}from"../../Conjure.js";import*as e from" https://cdn.skypack.dev/pin/three@v0.123.0-STd7XeVUbImsNuMmqKGL/min/three.js";export default class h extends a{constructor(t,i){super(t,i);this.screenTitle.mesh.visible=!1,this.tabs={Exit:()=>{this.screenManager.conjure.setConjureMode(c.EXPLORE)},Assets:()=>{this.screenManager.showScreen(this.screenManager.screenAssets)},Create:()=>{this.screenManager.showScreen(this.screenManager.screenObjectsHierarchy)},Settings:()=>{this.screenManager.showScreen(this.screenManager.screenRealmSettings)}},this.tabKeys=Object.keys(this.tabs),this.tabHeight=.5/this.tabKeys.length;let n=.5;for(let o of this.tabKeys){let r=new s(this,this,{x:-.95,y:n,width:.1,height:this.tabHeight,text:o,anchor:!0});r.setOnClickCallback(this.tabs[o]),this.registerElement(r),n-=this.tabHeight*2}this.objectButtonRemove=new s(this,this,{x:-.05,y:-.9,width:.1,height:.1,text:"",anchor:!0}),this.objectButtonRemove.button.material.visible=!1,this.objectButtonRemove.group.add(new e.Mesh(new e.PlaneBufferGeometry(.01,.1),new e.MeshBasicMaterial({color:16711680})).rotateZ(-Math.PI/3)),this.objectButtonRemove.group.add(new e.Mesh(new e.RingBufferGeometry(.04,.05,32),new e.MeshBasicMaterial({color:16711680}))),this.objectButtonRemove.setOnClickCallback(()=>{const o=this.screenManager.conjure.world.objectControls.getSelectedObject();o&&this.screenManager.conjure.world.realm.destroyObject(o)}),this.objectButtonRemove.onMouseOver=()=>{this.objectButtonRemove.group.scale.set(1,1,1)},this.objectButtonRemove.onMouseOut=()=>{this.objectButtonRemove.group.scale.set(.75,.75,.75)},this.registerElement(this.objectButtonRemove),this.objectButtonEdit=new s(this,this,{x:.05,y:-.9,width:.1,height:.1,text:"",anchor:!0}),this.objectButtonEdit.button.material.visible=!1,this.objectButtonEdit.group.add(new e.Mesh(new e.PlaneBufferGeometry(.06,.005),new e.MeshBasicMaterial({color:65280})).translateY(.02)),this.objectButtonEdit.group.add(new e.Mesh(new e.PlaneBufferGeometry(.06,.005),new e.MeshBasicMaterial({color:65280}))),this.objectButtonEdit.group.add(new e.Mesh(new e.PlaneBufferGeometry(.06,.005),new e.MeshBasicMaterial({color:65280})).translateY(-.02)),this.objectButtonEdit.group.add(new e.Mesh(new e.PlaneBufferGeometry(.1,.01),new e.MeshBasicMaterial({color:65280})).translateY(.05)),this.objectButtonEdit.group.add(new e.Mesh(new e.PlaneBufferGeometry(.1,.01),new e.MeshBasicMaterial({color:65280})).translateY(-.05)),this.objectButtonEdit.group.add(new e.Mesh(new e.PlaneBufferGeometry(.01,.1),new e.MeshBasicMaterial({color:65280})).translateX(.05)),this.objectButtonEdit.group.add(new e.Mesh(new e.PlaneBufferGeometry(.01,.1),new e.MeshBasicMaterial({color:65280})).translateX(-.05)),this.objectButtonEdit.setOnClickCallback(()=>{const o=this.screenManager.conjure.world.objectControls.getSelectedObject();o&&(this.screenManager.showScreen(this.screenManager.screenObjectEdit),this.screenManager.screenObjectEdit.setObject(o))}),this.objectButtonEdit.onMouseOver=()=>{this.objectButtonEdit.group.scale.set(1,1,1)},this.objectButtonEdit.onMouseOut=()=>{this.objectButtonEdit.group.scale.set(.75,.75,.75)},this.registerElement(this.objectButtonEdit),this.screenManager.conjure.world.objectControls.on("selected",o=>{this.showIcons(o!==void 0)})}showIcons(t){this.objectButtonRemove.setDisabled(!t),this.objectButtonRemove.group.visible=t,this.objectButtonEdit.setDisabled(!t),this.objectButtonEdit.group.visible=t}showScreen(t){super.showScreen(t),this.showIcons(this.screenManager.conjure.world.objectControls.getSelectedObject()!==void 0)}update(t){super.update(t)}}
