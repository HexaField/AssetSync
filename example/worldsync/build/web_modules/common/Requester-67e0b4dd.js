import{p as a}from"./process-e9e98960.js";const i=typeof self=="object"&&self.constructor&&self.constructor.name==="DedicatedWorkerGlobalScope",c=typeof a!="undefined"&&a.versions!=null&&a.versions.node!=null,t=[];for(let e=0;e<256;e++)t[e]=(e<16?"0":"")+e.toString(16);function p(){const e=Math.random()*4294967295|0,s=Math.random()*4294967295|0,f=Math.random()*4294967295|0,o=Math.random()*4294967295|0,r=t[e&255]+t[e>>8&255]+t[e>>16&255]+t[e>>24&255]+"-"+t[s&255]+t[s>>8&255]+"-"+t[s>>16&15|64]+t[s>>24&255]+"-"+t[f&63|128]+t[f>>8&255]+"-"+t[f>>16&255]+t[f>>24&255]+t[o&255]+t[o>>8&255]+t[o>>16&255]+t[o>>24&255];return r.toUpperCase()}class d{constructor(e){this.sendRequest=e,this.replyCallbacks={}}async request(e,s){const f=p();return await new Promise((o,r)=>{const n=setTimeout(1e4,()=>{delete this.replyCallbacks[f],r("PeerSync Requester: WebSocket request timed out")});this.addReplyListener(f,l=>{clearTimeout(n),o(l.data)}),this.sendRequest({timestamp:f,opcode:e,data:s})})}receiveReply(e){try{e.timestamp&&(this.replyCallbacks[e.timestamp](e),delete this.replyCallbacks[e.timestamp])}catch(s){console.log(s,e,this.replyCallbacks)}}addReplyListener(e,s){this.replyCallbacks[e]=s}}export{d as R,i as a,c as i};
