import s from"./PayIDDomain.js";import o from"./DigitalAssetHandler.js";export default class r{constructor(e){this.service=e,this.digitalAssetHandler=new o(this),this.domains=[],this.activeID=void 0}async initialise(){await this.digitalAssetHandler.initialise(),console.log(this.domains),this.addDomain("xpring.money")}setActiveID(e,t){this.activeID=t.getAccount()+"$"+e.getDomain()}async getBalance(e){}async sendPayment(e,t,a){return await this.digitalAssetHandler.makePayment(e,t,a)}async addAccount(e,t){if(e.getAccount(t))return;try{let a=await this.digitalAssetHandler.payIdClient.allAddressesForPayId(t+"$"+e.getDomain());if(console.log(a),a.error){this.conjure.getGlobalHUD().log(a.message);return}let i=e.addAccount(t);for(let n of a)i.addWallet(n);return this.activeID||(this.activeID=t+"$"+e.getDomain()),i}catch(a){console.log(a)}}removeAccount(e,t){e.removeAccount(t.getAccount())}async createAccount(e,t){}async updateAccount(e,t){}async addWallet(e,t,a){}async removeWallet(e,t,a){}addDomain(e){if(console.log(this.domains),this.getDomain(e))return;let t=new s(e);return this.domains.push(t),t}removeDomain(e){for(let t in this.domains)if(this.domains[t].getDomain()===e)return this.domains.splice(t,1),!0}getDomain(e){for(let t of this.domains)if(t.domain===e)return t;return}getDomains(){return this.domains}refreshScreen(){}}
