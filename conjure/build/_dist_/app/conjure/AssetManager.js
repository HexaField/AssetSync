import*as h from"https://cdn.skypack.dev/pin/three@v0.117.1-NetLzdTnw9ga3y6o633U/min/three.js";import{TextureLoader as m}from"./util/BitmapTextureLoader.js";import c from"../../../web_modules/lodash.js";import{createMaterial as T}from"./util/wireframe/index.js";import{number as d}from"./util/number.js";export const ASSET_TYPE={TEXTURE:"Texture",MATERIAL:"Material",GEOMETRY:"Geometry",STRUCTURE:"Structure",MESH:"Mesh"};export default class f{constructor(e){this.conjure=e,this.enableCaching=!0,this.assets={};for(let t of Object.values(ASSET_TYPE))this.assets[t]={};this.textureLoader=new m}createB64FromImage(e){let t=document.createElement("canvas");t.width=e.width,t.height=e.height;let s=t.getContext("2d");s.drawImage(e,0,0);let a=t.toDataURL("image/png");return a}createSingleMenger(e,t){let s=new h.Geometry;for(let a=-1;a<=1;a++)for(let i=-1;i<=1;i++)for(let r=-1;r<=1;r++){if(!a&&!i||!i&&!r||!a&&!r)continue;{let n=new h.Mesh(e?this.createSingleMenger(e-1,t):new h.BoxGeometry);n.scale.set(1/3,1/3,1/3),n.position.set(a/3,i/3,r/3),n.updateMatrix(),s.mergeMesh(n)}}return s}createMengerGeometry(e){let t=new h.BufferGeometry;return t.fromGeometry(this.createSingleMenger(e,e)),t}async createDefaultAssets(){this.mengerGeometry=this.createMengerGeometry(1),this.tronMaterial=T({thickness:.01}),this.missingTexture=await this.conjure.load.texture("missing_texture"),this.mengerTexture=await this.conjure.load.texture("menger_texture"),this.mengerTextureAssetHash=await this.saveAsset(ASSET_TYPE.TEXTURE,"Menger",this.mengerTexture,"Menger",{src:this.mengerImage}),this.mengerMaterial=new h.MeshBasicMaterial({map:this.mengerTexture}),this.mengerMaterialAssetHash=await this.saveAsset(ASSET_TYPE.MATERIAL,this.mengerMaterial.uuid,this.mengerMaterial,"Menger"),this.ponderTexture=await this.conjure.load.texture("ponder_texture"),this.ponderTextureAssetHash=await this.saveAsset(ASSET_TYPE.TEXTURE,"Ponder",this.ponderTexture,"Ponder",{src:this.ponderImage}),this.ponderMaterial=new h.MeshBasicMaterial({map:this.ponderTexture}),this.ponderMaterialAssetHash=await this.saveAsset(ASSET_TYPE.MATERIAL,this.ponderMaterial.uuid,this.ponderMaterial,"Ponder"),this.defaultTexture=await this.conjure.load.texture("default_texture"),this.defaultTextureAssetHash=await this.saveAsset(ASSET_TYPE.TEXTURE,"Default",this.defaultTexture,"Default",{src:this.defaultImage}),this.defaultMaterial=new h.MeshBasicMaterial({map:this.defaultTexture}),this.defaultMaterialAssetHash=await this.saveAsset(ASSET_TYPE.MATERIAL,this.defaultMaterial.uuid,this.defaultMaterial,"Default"),this.normalMaterial=new h.MeshNormalMaterial,this.normalMaterialAssetHash=await this.saveAsset(ASSET_TYPE.MATERIAL,this.normalMaterial.uuid,this.normalMaterial,"Normal"),this.defaultGeometry=new h.BoxBufferGeometry(1,1),this.defaultGeometryAssetHash=await this.saveAsset(ASSET_TYPE.GEOMETRY,this.defaultGeometry.uuid,this.defaultGeometry,"Default"),this.defaultMesh=(await this.conjure.load.gltf("sword")).scene,this.defaultMeshAssetHash=await this.saveAsset(ASSET_TYPE.STRUCTURE,this.defaultMesh.uuid,this.defaultMesh,"Chevalier")}async createAsset(e,t,s){if(!t)return;switch(e){case ASSET_TYPE.TEXTURE:let a=this.getIdenticalTextureByImage(t);if(a)return a;let i=await this.conjure.load.texture(t);return await this.saveAsset(ASSET_TYPE.TEXTURE,s,i,s,{src:t});case ASSET_TYPE.MATERIAL:let r=this.getIdenticalMaterial(t);return r||await this.saveAsset(ASSET_TYPE.MATERIAL,s,t,s);case ASSET_TYPE.GEOMETRY:let n=this.getIdenticalGeometry(t);return n||await this.saveAsset(ASSET_TYPE.GEOMETRY,s,t,s);case ASSET_TYPE.MESH:let u=this.getIdenticalMesh(t);return u||await this.saveAsset(ASSET_TYPE.MESH,s,t,s);case"fbx":let l=await this.conjure.load.fbx(t);return await this.saveAssets(l),await this.saveAsset(ASSET_TYPE.STRUCTURE,s,l,s);case"gltf":let o=await this.conjure.load.gltf(t);return await this.saveAssets(o),await this.saveAsset(ASSET_TYPE.STRUCTURE,s,o,s);default:return}}async loadImageAssetFromHash(e){}getIdenticalMaterial(e){}getIdenticalGeometry(e){}getIdenticalMesh(e){}getIdenticalTextureByImage(e){let t=Object.keys(this.assets[ASSET_TYPE.TEXTURE]);for(let s of t)if(e===this.assets[ASSET_TYPE.TEXTURE][s].metaData.src)return s;return!1}async saveAsset(e,t,s,a,i={}){let r=this.getHashByTypeAndData(e,s);return r||(r=String(Date.now()),this.setByIPFSHash(e,r,s,a,i),r)}async saveAssets(e){if(!e)return;if(e.geometry&&(e.geometry=this.getByIPFSHash(ASSET_TYPE.GEOMETRY,await this.createAsset(ASSET_TYPE.GEOMETRY,e.geometry,e.geometry.uuid)).data),e.material&&(e.material.map&&(e.material.map=this.getByIPFSHash(ASSET_TYPE.TEXTURE,await this.createAsset(ASSET_TYPE.TEXTURE,e.material.map.image.currentSrc,e.material.map.uuid)).data),e.material=this.getByIPFSHash(ASSET_TYPE.MATERIAL,await this.createAsset(ASSET_TYPE.MATERIAL,e.material,e.material.uuid)).data),e.children&&e.children.length>0)for(let t of e.children)await this.saveAssets(t)}getHashByTypeAndData(e,t){let s=Object.keys(this.assets[e]);for(let a of s)if(t===this.assets[e][a].data||c.isMatch(t,this.assets[e][a].data))return a;return!1}updateLastUsed(e){e.lastUsed=String(Date.now())}getAllOfTypeByLastUsed(e){let t=[],s=Object.keys(this.assets[e]);for(let a of s)t.push(this.assets[e][a]);return t.sort(function(a,i){return d(i.lastUsed)-d(a.lastUsed)}),t}getByIPFSHash(e,t){return this.assets[e][t]?this.assets[e][t]:void 0}setByIPFSHash(e,t,s,a,i={}){return this.assets[e][t]={data:s,name:a||e+"-"+Math.round(Math.random()*1e4),lastUsed:String(Date.now()),metaData:i,type:e},this.assets[e][t].data.userData||(this.assets[e][t].data.userData={}),this.assets[e][t].data.userData.hash=t,this.assets[e][t].metaData.hash=t,this.conjure.getScreens()&&(this.conjure.getScreens().screenAssets.updateAssets(),this.conjure.getScreens().screenAssetSelect.updateAssets()),this.assets[e][t]}removeAssetByHash(e,t){return this.assets[e][t]?(delete this.assets[e][t],!0):!1}removeAsset(e){if(!e||!e.type)return;let t=Object.keys(this.assets[e.type]);for(let s of t)if(e===this.assets[e.type][s])return delete this.assets[e.type][s],!0}}
