import T from"./ScreenBase.js";import c from"./elements/ScreenElementButton.js";import d from"./elements/ScreenElementCycleButton.js";import y from"./elements/ScreenElementLabelled.js";import S from"./elements/ScreenElementScroll.js";import E from"./elements/ScreenElementSlider.js";import A from"./elements/ScreenElementText.js";import b from"./elements/ScreenElementToggleButton.js";import v from"./elements/ScreenElementAssetSelector.js";import{ASSET_TYPE as l}from"../AssetManager.js";import g from"./elements/ScreenElementMesh.js";import*as h from" https://cdn.skypack.dev/pin/three@v0.123.0-STd7XeVUbImsNuMmqKGL/min/three.js";import C from"./elements/ScreenElementLoadFile.js";import G from"./elements/ScreenElementSprite.js";import x from"./elements/ScreenElementTextureEditor.js";import{number as M}from"../util/number.js";import B from"./elements/ScreenElementStructure.js";const p=Math.PI,o=p*2;export default class P extends T{constructor(e,t){super(e,t);this.group.add(this.background),this.onAssetTypeChange=this.onAssetTypeChange.bind(this),this.onAssetPresetChange=this.onAssetPresetChange.bind(this),this.getDetailsByAsset=this.getDetailsByAsset.bind(this),this.onAssetDetailChange=this.onAssetDetailChange.bind(this),this.onSaveAsset=this.onSaveAsset.bind(this),this.onCreateAsset=this.onCreateAsset.bind(this),this.onLoadAsset=this.onLoadAsset.bind(this),this.onDestroyAsset=this.onDestroyAsset.bind(this),this.currentAsset=void 0,this.generateSchemas(),this.assetPanel=new S(this,this,{x:-this.width/2+.4,y:-.1,width:.8,height:this.height-.2,scrollSide:"left"}),this.registerElement(this.assetPanel),this.assetPanel.background.visible=!1,this.assetTypeButton=new d(this,this,{x:-this.width/2+.4,y:this.height/2-.1,width:.3,height:.1}),this.assetTypeButton.setOnClickCallback(this.onAssetTypeChange,!0),this.assetTypeButton.setValues(Object.keys(this.schemas)),this.registerElement(this.assetTypeButton),this.createButton=new c(this,this,{x:-this.width/2+.15,y:-this.height/2+.1,width:.2,height:.1,text:"Create"}),this.createButton.setOnClickCallback(this.onCreateAsset),this.registerElement(this.createButton),this.loadButton=new C(this,this,{x:-this.width/2+.4,y:-this.height/2+.1,width:.2,height:.1,text:"Load",onLoad:this.onLoadAsset}),this.registerElement(this.loadButton),this.destroyButton=new c(this,this,{x:-this.width/2+.65,y:-this.height/2+.1,width:.2,height:.1,text:"Destroy"}),this.destroyButton.setOnClickCallback(this.onDestroyAsset),this.registerElement(this.destroyButton),this.detailsPanel=new S(this,this,{y:-.1,width:.8,height:this.height-.2,scrollSide:"left"}),this.registerElement(this.detailsPanel),this.detailsPanel.background.visible=!1,this.assetPresetButton=new d(this,this,{y:this.height/2-.1,width:.3,height:.1}),this.assetPresetButton.setOnClickCallback(this.onAssetPresetChange,!0),this.registerElement(this.assetPresetButton),this.assetPresetButton.setHidden(!0),this.assetSaveButton=new c(this,this,{x:this.width/2-.4,y:this.height/2-.1,width:.3,height:.1}),this.assetSaveButton.setText("Save"),this.assetSaveButton.setOnClickCallback(this.onSaveAsset),this.registerElement(this.assetSaveButton),this.assetSaveButton.setHidden(!0),this.temporaryGeometry=new h.BoxGeometry(1,1),this.temporaryMaterial=new h.MeshNormalMaterial,this.previewMesh=new g(this,this,{x:this.width/2-.4,geometry:this.temporaryGeometry,material:this.temporaryMaterial,rotate:!0,scale:.25}),this.previewMesh.group.visible=!1,this.registerElement(this.previewMesh),this.previewStructure=new B(this,this,{x:this.width/3,rotate:!0,scale:.25}),this.previewStructure.group.visible=!1,this.registerElement(this.previewStructure),this.previewImage=new G(this,this,{x:this.width/2-.4,width:.2,height:.2}),this.registerElement(this.previewImage),this.geometryMappings=new Map([["BoxBufferGeometry",h.BoxBufferGeometry],["SphereBufferGeometry",h.SphereBufferGeometry],["TetrahedronBufferGeometry",h.TetrahedronBufferGeometry],["OctahedronBufferGeometry",h.OctahedronBufferGeometry],["IcosahedronBufferGeometry",h.IcosahedronBufferGeometry],["DodecahedronBufferGeometry",h.DodecahedronBufferGeometry],["CylinderBufferGeometry",h.CylinderBufferGeometry],["ConeBufferGeometry",h.ConeBufferGeometry],["PlaneBufferGeometry",h.PlaneBufferGeometry],["CircleBufferGeometry",h.CircleBufferGeometry],["RingBufferGeometry",h.RingBufferGeometry]]),this.materialMappings=new Map([["MeshBasicMaterial",h.MeshBasicMaterial],["MeshDepthMaterial",h.MeshDepthMaterial],["MeshLambertMaterial",h.MeshLambertMaterial],["MeshMatcapMaterial",h.MeshMatcapMaterial],["MeshNormalMaterial",h.MeshNormalMaterial],["MeshPhysicalMaterial",h.MeshPhysicalMaterial],["MeshStandardMaterial",h.MeshStandardMaterial],["MeshToonMaterial",h.MeshToonMaterial]]),this.assetList=[],this.currentAssetType=l.TEXTURE,this.getAssetsByType(this.currentAssetType)}onCreateAsset(){}onLoadAsset(e){for(let t of e){const n=new FileReader;n.readAsDataURL(t),n.onload=a=>{console.log(t,a);let s;t.type.indexOf("image")!==-1&&(s=l.TEXTURE),t.name.endsWith("fbx")&&(s="fbx"),t.name.endsWith("gltf")&&(s="gltf"),s?this.screenManager.conjure.assetManager.createAsset(s,a.target.result,t.name):console.log("Failed to load file as asset: Unsupported file type",t.type)}}}onDestroyAsset(){this.screenManager.conjure.assetManager.removeAsset(this.currentAsset)&&(this.currentAsset=void 0,this.getAssetsByType(this.currentAssetType),this.getDetailsByAsset())}onAssetPresetChange(){this.getDetailsByAsset({type:this.currentAssetType,preset:this.assetPresetButton.getValue(!0)})}onAssetDetailChange(){let e={},t=!1;for(let a of this.assetPanel.items)if(a.element.selected){t=!0;break}if(!t){this.previewMesh.group.visible=!1,this.previewImage.group.visible=!1;return}if(this.detailsPanel.items.length===0)return;for(let a of this.detailsPanel.items){let s=a.getValue();M(s)&&(s=M(s)),e[a.getText()]=s}let n=this.assetPresetButton.getValue(!0);switch(this.currentAssetType){case l.TEXTURE:this.previewImage.setIconTexture(this.currentAsset.data),this.previewMesh.group.visible=!1,this.previewImage.group.visible=!0,this.previewStructure.group.visible=!1;break;case l.GEOMETRY:e=Object.values(e),this.temporaryGeometry=new(this.geometryMappings.get(n))(...e),this.previewMesh.setGeometry(this.temporaryGeometry),this.temporaryAsset=this.temporaryGeometry,this.previewMesh.group.visible=!0,this.previewImage.group.visible=!1,this.previewStructure.group.visible=!1;break;case l.MATERIAL:this.temporaryMaterial=new(this.materialMappings.get(n))(e),this.previewMesh.setMaterial(this.temporaryMaterial),this.temporaryAsset=this.temporaryMaterial,this.previewMesh.group.visible=!0,this.previewImage.group.visible=!1,this.previewStructure.group.visible=!1;break;case l.STRUCTURE:this.previewMesh.group.visible=!1,this.previewImage.group.visible=!1,this.previewStructure.group.visible=!0;break;default:break}}getDetailsByAsset(e){if(!e){this.assetPresetButton.setHidden(!0),this.assetSaveButton.setHidden(!0),this.onAssetDetailChange();return}if(e.element){for(let i of this.assetPanel.items)i.element.setSelected(!1);e.element.setSelected(!0),this.currentAsset=e.asset}let t=this.schemas[e.type],n=Object.keys(t),a=!1,s=!0,f="";if(e.asset){for(let i of n)!a&&i===String(e.asset.data.type)&&(t=t[i],s=!1,a=!0,f=i);if(!a){console.log("ERROR: ScreenAsset: found asset with unsupported type",e.asset.data.type);return}}else if(e.preset){for(let i of n)!a&&i===String(e.preset)&&(t=t[i],a=!0,f=i);if(!a){console.log("ERROR: ScreenAsset: found asset with unsupported type",e.preset);return}}let u;s||(u=e.asset.data,e.asset.data.parameters&&(u=e.asset.data.parameters)),this.detailsPanel.removeAllItems();for(let i in t){let r;if(t[i]==="0"||t[i]==="1")r=new b(this,this.detailsPanel,{width:.4,height:.1}),r.setOnClickCallback(this.onAssetDetailChange,r),r.setValue(s?t[i]:u[i]);else if(t[i]==="static")r=new A(this,this.detailsPanel,{width:.4,height:.1,anchorX:"left",width:1,fontScale:.5}),r.setText(u[i]);else if(t[i]==="texture"){let m=this.screenManager.conjure.assetManager.defaultTextureAssetHash;!s&&u[i]&&(m=this.screenManager.conjure.assetManager.getHashByTypeAndData(l.TEXTURE,u[i]));let w=this.screenManager.conjure.assetManager.getByIPFSHash(l.TEXTURE,m);r=new v(this,this.detailsPanel,{width:.4,height:.1,previewScale:.1}),r.setOnClickCallback(this.onAssetDetailChange,r),r.setAsset(w)}else if(t[i]==="image")r=new x(this,this.detailsPanel,{width:.4,height:.1,previewScale:.1}),r.setOnClickCallback(this.onAssetDetailChange,r),r.setAsset(e.asset);else if(t[i][0]===2)r=new d(this,this.detailsPanel,{width:.4,height:.1}),r.setOnClickCallback(this.onAssetDetailChange,r),r.setValues(t[i][1],s?t[i][2]:u[i]);else if(!(t[i][0]===3)){let m=t[i];s||(m[3]=u[i]),r=new E(this,this.detailsPanel,{width:.4,height:.1}),r.setOnClickCallback(this.onAssetDetailChange,r),r.setValues(m)}if(r){const m=new y(this,this.detailsPanel,{width:.4,height:.1,element:r});m.setText(i),this.detailsPanel.registerItem(m)}}this.detailsPanel.updateItems(0),this.assetPresetButton.setHidden(!1),this.detailsPanel.items.length>0&&this.assetPanel.items.length>0&&this.schemas[e.type]&&Object.keys(this.schemas[e.type]).length>1?(this.assetPresetButton.setValue(f),this.assetPresetButton.setHidden(!1),this.assetSaveButton.setHidden(!1)):(this.assetPresetButton.setHidden(!0),this.assetSaveButton.setHidden(!0)),this.onAssetDetailChange()}generateSchemas(){this.schemas=[];let e=Object.values(l);for(let t of e)switch(t){case l.TEXTURE:this.schemas[t]=this.getTextureSchema();break;case l.MATERIAL:this.schemas[t]=this.getMaterialSchema();break;case l.GEOMETRY:this.schemas[t]=this.getGeometrySchema();break;case l.STRUCTURE:this.schemas[t]=this.getStructureSchema();break;default:break}}onAssetTypeChange(e){this.currentAssetType=e,this.getAssetsByType(e),this.detailsPanel.removeAllItems(),this.assetPresetButton.setHidden(!0),this.assetSaveButton.setHidden(!0),this.onAssetDetailChange()}getAssetsByType(e){for(let n of this.assetList)this.assetPanel.removeItem(n);this.assetList=[];let t=this.screenManager.conjure.assetManager.getAllOfTypeByLastUsed(e);if(t)for(let n of t){const a=new c(this,this.assetPanel,{width:.4,height:.1});a.setText(n.name),a.setOnClickCallback(this.getDetailsByAsset,{asset:n,type:e,element:a});const s=new y(this,this.assetPanel,{x:.05,z:.1,width:.4,height:.1,element:a});s.setText("");switch(e){case l.TEXTURE:s.setIconFromTexture(n.data),s.setIconSize(.1),s.icon.group.position.set(-.2,0,0);break;case l.MATERIAL:s.registerElement(new g(this,s,{x:-.2,geometry:this.screenManager.conjure.assetManager.defaultGeometry,material:n.data,rotate:!0,scale:.075}));break;case l.GEOMETRY:s.registerElement(new g(this,s,{x:-.2,geometry:n.data,material:this.screenManager.conjure.assetManager.normalMaterial,rotate:!0,scale:.075}));break;case l.STRUCTURE:s.registerElement(new B(this,s,{x:-.2,structure:n.data,rotate:!0,scale:.075})),this.previewStructure.structure=n.data;break;default:break}this.assetPanel.registerItem(s),this.assetList.push(s)}this.assetPanel.updateItems(0),this.assetPanel.items.length>0&&this.schemas[e]&&Object.keys(this.schemas[e]).length>1?(this.assetPresetButton.setValues(Object.keys(this.schemas[e])),this.assetPresetButton.setHidden(!1),this.assetSaveButton.setHidden(!1)):(this.assetPresetButton.setHidden(!0),this.assetSaveButton.setHidden(!0))}async onSaveAsset(){if(!this.currentAsset)return;await this.screenManager.conjure.assetManager.saveAsset(this.currentAssetType,this.temporaryAsset.uuid,this.temporaryAsset)}updateAssets(){if(!this.active)return;this.getAssetsByType(this.currentAssetType),this.onAssetDetailChange()}showScreen(e){super.showScreen(e),this.getAssetsByType(this.currentAssetType),this.onAssetDetailChange()}update(e){super.update(e)}getGeometrySchema(){return{BoxBufferGeometry:{width:[0,.01,2,1],height:[0,.01,2,1],depth:[0,.01,2,1],widthSegments:[1,1,16,1],heightSegments:[1,1,16,1],depthSegments:[1,1,16,1]},SphereBufferGeometry:{radius:[0,0,2,1],widthSegments:[1,3,32,8],heightSegments:[1,2,32,8],phiStart:[0,0,6,0],phiLength:[0,0,o,o],thetaStart:[0,0,6,0],thetaLength:[0,0,p,p]},TetrahedronBufferGeometry:{radius:[0,0,2,1],detail:[1,0,5,0]},OctahedronBufferGeometry:{radius:[0,0,2,1],detail:[1,0,5,0]},IcosahedronBufferGeometry:{radius:[0,0,2,1],detail:[1,0,5,0]},DodecahedronBufferGeometry:{radius:[0,0,2,1],detail:[1,0,5,0]},CylinderBufferGeometry:{radiusTop:[0,0,2,1],radiusBottom:[0,0,2,1],height:[0,.001,2,1],radialSegments:[1,3,64,8],heightSegments:[1,1,64,1],openEnded:"0",thetaStart:[0,0,o,0],thetaLength:[0,0,o,o]},ConeBufferGeometry:{radius:[0,.001,4,1],height:[0,.001,4,1],radialSegments:[1,3,64,8],heightSegments:[1,1,64,1],openEnded:[-1,1],thetaStart:[0,0,o,0],thetaLength:[0,0,o,o]},PlaneBufferGeometry:{width:[0,.01,2,1],height:[0,.01,2,1],widthSegments:[1,1,32,1],heightSegments:[1,1,32,1]},CircleBufferGeometry:{radius:[0,.001,4,1],segments:[1,3,128,8],thetaStart:[0,0,o,0],thetaLength:[0,0,o,o]},RingBufferGeometry:{innerRadius:[0,.001,2,1],outerRadius:[0,.001,2,1],thetaSegments:[1,3,32,8],phiSegments:[1,1,32,1],thetaStart:[0,0,o,0],thetaLength:[0,0,o,o]}}}getMaterialSchema(){let e={MeshBasicMaterial:{color:[3],wireframe:"0",vertexColors:"0",map:"texture"},MeshDepthMaterial:{wireframe:"0"},MeshLambertMaterial:{color:[3],emissive:[3],wireframe:"0",vertexColors:"0"},MeshMatcapMaterial:{color:[3],map:"texture",matcap:"texture",alphaMap:"texture",normalMap:"texture"},MeshNormalMaterial:{flatShading:"0",wireframe:"0"},MeshPhysicalMaterial:{color:[3],emissive:[3],roughness:[0,0,1,1],metalness:[0,0,1,0],reflectivity:[0,0,1,.5],clearcoat:[0,0,1,0],ccRoughness:[0,0,1,0],wireframe:"0",flatshading:"0",vertexColors:"0",map:"texture",roughnessMap:"texture",alphaMap:"texture"},MeshStandardMaterial:{color:[3],emissive:[3],roughness:[0,0,1,1],metalness:[0,0,1,0],wireframe:"0",flatshading:"0",vertexColors:"0",map:"texture",roughnessMap:"texture",alphaMap:"texture"},MeshToonMaterial:{color:[3],map:"texture",gradientMap:"texture",alphaMap:"texture"}},t=Object.keys(e),n=this.getMaterialCommonSchema();for(let a of t)e[a]={...e[a],...n};return e}getMaterialCommonSchema(){return{transparent:"0",opacity:[0,0,1,1],depthTest:"1",depthWrite:"1",alphaTest:[0,0,1,1],side:[2,["Front","Back","Double"],0]}}getTextureSchema(){return{1009:{image:"image"}}}getStructureSchema(){return{Group:"",Mesh:""}}}
