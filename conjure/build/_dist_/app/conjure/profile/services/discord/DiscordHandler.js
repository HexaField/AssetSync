export default class o{constructor(e){this.serviceHandler=e,this.loader=new THREE.FileLoader,this.userData=void 0,this.accessDiscord=this.accessDiscord.bind(this),this.loggedIn=!1}tryConnect(){this.load("discord-info.txt",this.accessDiscord)}load(e,s){this.loader.load(e,t=>{s(t)},t=>{},t=>{console.error("Failed to load discord key, could not log in.")})}async logOut(){if(!this.loggedIn)return;let e=JSON.parse(window.clientDatastore.get("discordAccessToken"));const s=Buffer.from(`${this.clientId}:${this.clientSecret}`).toString("base64"),t=await this.oauth.revokeToken(e.access_token,s);await window.clientDatastore.del("discordAccessToken"),this.userData=void 0,this.setLoggedIn(!1)}async accessDiscord(e){let s=e.split(`
`);if(this.clientId=s[0],this.clientSecret=s[1],this.oauth=new DiscordOauth2({clientId:this.clientId,clientSecret:this.clientSecret,redirectUri:location.origin+"/success.html"}),this.url=this.oauth.generateAuthUrl({scope:"identify guilds",state:randomBytes(16).toString("hex")}),window.localStorage.getItem("discordAccessToken")){let t=JSON.parse(await window.clientDatastore.get("discordAccessToken"));try{const i=this.oauth.tokenRequest({refreshToken:t.refresh_token,grantType:"refresh_token",scope:"identify guilds"});i&&(console.log("Successfully logged into discord with refresh token!"),await window.clientDatastore.put("discordAccessToken",JSON.stringify(i)),this.setLoggedIn(!0),await this.getUser(i))}catch(i){console.log(i),await window.clientDatastore.del("discordAccessToken"),this.userData=void 0,this.setLoggedIn(!1)}}}async logInToDiscord(){this.loggedIn?this.logOut():(window.addEventListener("message",async e=>{if(e.data.message==="deliverResult"){let s=new URL(e.data.result).searchParams;await this.logIn(s.get("code"),s.get("state")),e.source.close()}}),window.open(this.url,"Login"))}async logIn(e,s){try{const t=this.oauth.tokenRequest({code:e,scope:"identity guilds",grantType:"authorization_code"});t&&(console.log("Successfully logged into discord!"),await window.clientDatastore.put("discordAccessToken",JSON.stringify(t)),this.setLoggedIn(!0),await this.getUser(t))}catch(t){console.log(t),await window.clientDatastore.del("discordAccessToken"),this.userData=void 0,this.setLoggedIn(!1)}}async getUser(e){const s=await this.oauth.getUser(e.access_token);this.userData=s,this.serviceHandler.setData({discordName:this.userData.username,discordID:this.userData.id})}async getUserGuilds(){return await new Promise(async(e,s)=>{try{const t=await this.oauth.getUserGuilds(JSON.parse(await window.clientDatastore.get("discordAccessToken")).access_token);e(t)}catch(t){s(t)}})}setLoggedIn(e){this.loggedIn=e,this.serviceHandler.setLinked(e)}}
