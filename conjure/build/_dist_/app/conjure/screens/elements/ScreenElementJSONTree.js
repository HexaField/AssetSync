import u from"./ScreenElementBase.js";import d from"./ScreenElementJSONCollapsible.js";import p from"./ScreenElementLabelled.js";import m from"./ScreenElementText.js";import b from"./ScreenElementTextBox.js";import g from"./ScreenElementVector3.js";import S from"./ScreenElementButton.js";import w from"./ScreenElementScroll.js";import f from"./ScreenElementAssetSelector.js";import k from"./ScreenElementScaler.js";import{ASSET_TYPE as c}from"../../AssetManager.js";import E from"./ScreenElementCycleButton.js";import y from"./ScreenElementToggleButton.js";export default class P extends u{constructor(t,e,s={}){super(t,e,s);this.indent=.025,this.frameBorder=.05,this.schema={},this.collapsibleDragCallback=s.collapsibleDragCallback,this.refresh=this.onUpdate.bind(this),this.updateDisplay=this.updateDisplay.bind(this),this.itemSelected=s.itemSelected,this.itemHover=s.itemHover,this.scrollPanel=new w(this.screen,this,{width:this.width,height:this.height,scrollSide:"left",onScrollerCallback:this.updateDisplay,nestedElements:!0}),this.scrollPanel.innerWidth=this.scrollPanel.width-this.indent*4,this.scrollPanel.itemsGap=this.indent,this.registerElement(this.scrollPanel),this.alwaysUpdate=Boolean(s.alwaysUpdate)}setSchema(t){this.schema=t}onUpdate(){this.onUpdateCallback&&this.onUpdateCallback()}updateTree(t,e){this.onUpdateCallback=e,this.wipeTree(this.scrollPanel.items),this.scrollPanel.removeAllItems(),this.schema.type==="array"&&Array.isArray(t)?this.makeOfArray(this.scrollPanel,t,this.schema):this.schema.type==="json"?this.makeOfJSON(this.scrollPanel,t,this.schema.items):this.makeOfJSON(this.scrollPanel,t,this.schema),this.updateDisplay()}makeOfJSON(t,e,s){if(!e)return;let n=Object.keys(s),a=(t.innerWidth-2*this.indent)/2;for(let l of n){let i;switch(s[l].type){case"json":this.makeOfJSON(t,e[l],s[l].items);break;case"label":{let r=new m(this.screen,this.scrollPanel,{width:a,height:.075,textSettings:{scale:.75}});r.setText(s[l].label),t.addItem(r),this.scrollPanel.registerElement(r)}break;case"object":{let r=e[s[l].object];if(r){let h=new d(this.screen,this.scrollPanel,{width:a,height:.075,tree:this,selectable:!0,textSettings:{scale:.75}});h.setOnClickCallback(this.updateDisplay),h.setOnSelectedCallback(this.itemSelected,r),h.setOnHoverCallback(this.itemHover,r),h.setText(s[l].label),h.setReference(r),t.addItem(h),this.scrollPanel.registerElement(h)}}break;case"array":Array.isArray(e[l])&&e[l].length&&this.makeOfArray(t,e[l],s[l].items==="root"?this.schema:s[l]);break;case"static":i=new m(this.screen,this.scrollPanel,{width:a,height:.075,textSettings:{anchorX:"left",width:1,scale:.75}}),i.setText(e[l]);break;case"timestamp":i=new m(this.screen,this.scrollPanel,{width:a,height:.075,textSettings:{anchorX:"left",width:1,scale:.75}}),i.setText(new Date(e[l]).toLocaleString());break;case"list":i=new E(this.screen,this.scrollPanel,{width:a,height:.075,textSettings:{width:1,scale:.75}}),i.setValues(s[l].items),i.setValue(e[l]),i.setOnChangeCallback(r=>{e[l]=r,this.onUpdate()});break;case"button":i=new S(this.screen,this.scrollPanel,{width:a,height:.075,textSettings:{width:1,scale:.75}}),i.setText(s[l].buttonText),i.setOnClickCallback(s[l].callback),i.setDisabled(s[l].disable);break;case"bool":i=new y(this.screen,this.scrollPanel,{width:a,height:.075,textSettings:{width:1,scale:.75}}),i.setValue(e[l]),i.setOnChangeCallback(r=>{e[l]=r,this.onUpdate()});break;case"text":i=new b(this.screen,this.scrollPanel,{width:a,height:.075}),i.setText(e[l]),i.setSubject(e[l]),i.setOnChangeCallback(r=>{e[l]=r,this.onUpdate()}),i.setActive(!0);break;case"vector3":i=new g(this.screen,this.scrollPanel,{width:a/2,height:.075}),i.setSubject(e[l]);break;case"scaler":i=new k(this.screen,this.scrollPanel,{width:a,height:.075}),i.setValue(e[l]),i.setDefaultValue(s[l].default),i.setOnChangeCallback(r=>{e[l]=r,this.onUpdate()});break;case"material":{let r=this.screen.screenManager.conjure.assetManager.getHashByTypeAndData(c.MATERIAL,e[l]),h=this.screen.screenManager.conjure.assetManager.getByIPFSHash(c.MATERIAL,r);i=new f(this.screen,this.scrollPanel,{width:a,height:.075,previewScale:.075}),i.setAsset(h),i.setOnClickCallback(o=>{e[l]=o.data,this.onUpdate()})}break;case"geometry":{let r=this.screen.screenManager.conjure.assetManager.getHashByTypeAndData(c.GEOMETRY,e[l]),h=this.screen.screenManager.conjure.assetManager.getByIPFSHash(c.GEOMETRY,r);i=new f(this.screen,this.scrollPanel,{width:a,height:.075,previewScale:.075}),i.setAsset(h),i.setOnClickCallback(o=>{e[l]=o.data,this.onUpdate()})}break;default:break}if(i)if(s[l].ignoreLabel)t.addItem(i),this.scrollPanel.registerElement(i);else{i.group.position.setX((t.innerWidth/2-2*this.indent)/2);let r=new p(this.screen,this.scrollPanel,{width:a,height:.075,element:i,ratio:4,updateCallback:this.alwaysUpdate,textSettings:{anchorX:"right",width:1,scale:.75}});r.setText(s[l].label),t.addItem(r),this.scrollPanel.registerElement(r)}}}makeOfArray(t,e,s){if(!e||!e.length)return;if(e=this.sortArray(e,s.sort||"name"),!e||!e.length)return;for(let n of e){let a=new d(this.screen,this.scrollPanel,{width:(t.innerWidth-2*this.indent)/2,height:.075,tree:this,collapsible:!0});a.setOnClickCallback(this.updateDisplay),a.setOnSelectedCallback(this.itemSelected,n),a.setOnHoverCallback(this.itemHover,n),a.setText(n[s.label]),a.setReference(n),t.addItem(a),this.scrollPanel.registerElement(a),typeof n=="object"&&this.makeOfJSON(a,n,s.items)}}updateDisplay(){this.hideAll(this.scrollPanel.items),this.updateVisible(0,this.scrollPanel.items),this.scrollPanel.updateItems()}hideAll(t){for(let e of t)e.setHidden(!0),e.items&&this.hideAll(e.items)}updateVisible(t,e){for(let s of e)s.setHidden(!1),s.group.position.set(t+this.indent,0,0),s.items&&!s.uncollapsed&&this.updateVisible(t+this.indent,s.items)}wipeTree(t){for(let e of t)this.scrollPanel.group.remove(e.group),e.items&&this.wipeTree(e.items),e.destroy();t=[]}sortArray(t,e){return!t||!t.length?void 0:(t.sort(function(s,n){var a=String(s[e]).toUpperCase(),l=String(n[e]).toUpperCase();return a<l?-1:a>l?1:0}),t)}getAllSelectedItems(){let t=[];for(let e of this.scrollPanel.items)e.selected&&t.push(e);return t}getItemByReference(t,e){for(let s of t){if(s.reference===e)return s;if(s.items){let n=this.getItemByReference(s.items,e);if(n)return n}}return}setActive(t){super.setActive(t);for(let e of this.scrollPanel.items)e.setActive(t)}updateValue(){}update(t){super.update(t)}}
