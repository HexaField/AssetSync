import p from"./ScreenElementBase.js";import d from"./ScreenElementJSONCollapsible.js";import f from"./ScreenElementLabelled.js";import m from"./ScreenElementText.js";import b from"./ScreenElementTextBox.js";import g from"./ScreenElementVector3.js";import S from"./ScreenElementButton.js";import w from"./ScreenElementScroll.js";import u from"./ScreenElementAssetSelector.js";import k from"./ScreenElementScaler.js";import{ASSET_TYPE as c}from"../../AssetManager.js";import E from"./ScreenElementCycleButton.js";import C from"./ScreenElementToggleButton.js";export default class y extends p{constructor(t,e,i={}){super(t,e,i);this.indent=.025,this.frameBorder=.05,this.schema={},this.collapsibleDragCallback=i.collapsibleDragCallback,this.refresh=this.onUpdate.bind(this),this.updateDisplay=this.updateDisplay.bind(this),this.itemSelected=i.itemSelected,this.itemHover=i.itemHover,this.scrollPanel=new w(this.screen,this,{width:this.width,height:this.height,scrollSide:"left",onScrollerCallback:this.updateDisplay,nestedElements:!0}),this.scrollPanel.innerWidth=this.scrollPanel.width-this.indent*4,this.scrollPanel.itemsGap=this.indent,this.registerElement(this.scrollPanel),this.alwaysUpdate=Boolean(i.alwaysUpdate)}setSchema(t){this.schema=t}onUpdate(t){this.onUpdateCallback&&this.onUpdateCallback(t)}updateTree(t,e){this.onUpdateCallback=e,this.wipeTree(this.scrollPanel.items),this.scrollPanel.removeAllItems(),this.schema.type==="array"&&Array.isArray(t)?this.makeOfArray(this.scrollPanel,t,this.schema):this.schema.type==="json"?this.makeOfJSON(this.scrollPanel,t,this.schema.items):this.makeOfJSON(this.scrollPanel,t,this.schema),this.updateDisplay()}makeOfJSON(t,e,i){if(!e)return;let n=Object.keys(i),r=(t.innerWidth-2*this.indent)/2;for(let s of n){let l;switch(i[s].type){case"json":this.makeOfJSON(t,e[s],i[s].items);break;case"label":{let a=new m(this.screen,this.scrollPanel,{width:r,height:.075,textSettings:{scale:.75}});a.setText(i[s].label),t.addItem(a),this.scrollPanel.registerElement(a)}break;case"object":{let a=e[i[s].object];if(a){let h=new d(this.screen,this.scrollPanel,{width:r,height:.075,tree:this,selectable:!0,textSettings:{scale:.75}});h.setOnClickCallback(this.updateDisplay),h.setOnSelectedCallback(this.itemSelected,a),h.setOnHoverCallback(this.itemHover,a),h.setText(i[s].label),h.setReference(a),t.addItem(h),this.scrollPanel.registerElement(h)}}break;case"array":Array.isArray(e[s])&&e[s].length&&this.makeOfArray(t,e[s],i[s].items==="root"?this.schema:i[s]);break;case"static":l=new m(this.screen,this.scrollPanel,{width:r,height:.075,textSettings:{anchorX:"left",width:1,scale:.75}}),l.setText(e[s]);break;case"timestamp":l=new m(this.screen,this.scrollPanel,{width:r,height:.075,textSettings:{anchorX:"left",width:1,scale:.75}}),l.setText(new Date(e[s]).toLocaleString());break;case"list":l=new E(this.screen,this.scrollPanel,{width:r,height:.075,textSettings:{width:1,scale:.75}}),l.setValues(i[s].items),l.setValue(e[s]),l.setOnChangeCallback(a=>{e[s]=a,this.onUpdate(s)});break;case"button":l=new S(this.screen,this.scrollPanel,{width:r,height:.075,textSettings:{width:1,scale:.75}}),l.setText(i[s].buttonText),l.setOnClickCallback(i[s].callback),l.setDisabled(i[s].disable),l.setOnChangeCallback(a=>{this.onUpdate(s)});break;case"bool":l=new C(this.screen,this.scrollPanel,{width:r,height:.075,textSettings:{width:1,scale:.75}}),l.setValue(e[s]),l.setOnChangeCallback(a=>{e[s]=a,this.onUpdate(s)});break;case"text":l=new b(this.screen,this.scrollPanel,{width:r,height:.075}),l.setText(e[s]),l.setSubject(e[s]),l.setOnChangeCallback(a=>{e[s]=a,this.onUpdate(s)}),l.setActive(!0);break;case"vector3":l=new g(this.screen,this.scrollPanel,{width:r/2,height:.075}),l.setSubject(e[s]),l.setOnChangeCallback(a=>{this.onUpdate(s)});break;case"scaler":l=new k(this.screen,this.scrollPanel,{width:r,height:.075}),l.setValue(e[s]),l.setDefaultValue(i[s].default),l.setOnChangeCallback(a=>{e[s]=a,this.onUpdate(s)});break;case"material":{let a=this.screen.screenManager.conjure.assetManager.getHashByTypeAndData(c.MATERIAL,e[s]),h=this.screen.screenManager.conjure.assetManager.getByIPFSHash(c.MATERIAL,a);l=new u(this.screen,this.scrollPanel,{width:r,height:.075,previewScale:.075}),l.setAsset(h),l.setOnClickCallback(o=>{e[s]=o.data,this.onUpdate(s)})}break;case"geometry":{let a=this.screen.screenManager.conjure.assetManager.getHashByTypeAndData(c.GEOMETRY,e[s]),h=this.screen.screenManager.conjure.assetManager.getByIPFSHash(c.GEOMETRY,a);l=new u(this.screen,this.scrollPanel,{width:r,height:.075,previewScale:.075}),l.setAsset(h),l.setOnClickCallback(o=>{e[s]=o.data,this.onUpdate(s)})}break;default:break}if(l)if(i[s].ignoreLabel)t.addItem(l),this.scrollPanel.registerElement(l);else{l.group.position.setX((t.innerWidth/2-2*this.indent)/2);let a=new f(this.screen,this.scrollPanel,{width:r,height:.075,element:l,ratio:4,updateCallback:this.alwaysUpdate,textSettings:{anchorX:"right",width:1,scale:.75}});a.setText(i[s].label),t.addItem(a),this.scrollPanel.registerElement(a)}}}makeOfArray(t,e,i){if(!e||!e.length)return;if(e=this.sortArray(e,i.sort||"name"),!e||!e.length)return;for(let n of e){let r=new d(this.screen,this.scrollPanel,{width:(t.innerWidth-2*this.indent)/2,height:.075,tree:this,collapsible:!0});r.setOnClickCallback(this.updateDisplay),r.setOnSelectedCallback(this.itemSelected,n),r.setOnHoverCallback(this.itemHover,n),r.setText(n[i.label]),r.setReference(n),t.addItem(r),this.scrollPanel.registerElement(r),typeof n=="object"&&this.makeOfJSON(r,n,i.items)}}updateDisplay(){this.hideAll(this.scrollPanel.items),this.updateVisible(0,this.scrollPanel.items),this.scrollPanel.updateItems()}hideAll(t){for(let e of t)e.setHidden(!0),e.items&&this.hideAll(e.items)}updateVisible(t,e){for(let i of e)i.setHidden(!1),i.group.position.set(t+this.indent,0,0),i.items&&!i.uncollapsed&&this.updateVisible(t+this.indent,i.items)}wipeTree(t){for(let e of t)this.scrollPanel.group.remove(e.group),e.items&&this.wipeTree(e.items),e.destroy();t=[]}sortArray(t,e){return!t||!t.length?void 0:(t.sort(function(i,n){var r=String(i[e]).toUpperCase(),s=String(n[e]).toUpperCase();return r<s?-1:r>s?1:0}),t)}getAllSelectedItems(){let t=[];for(let e of this.scrollPanel.items)e.selected&&t.push(e);return t}getItemByReference(t,e){for(let i of t){if(i.reference===e)return i;if(i.items){let n=this.getItemByReference(i.items,e);if(n)return n}}return}setActive(t){super.setActive(t);for(let e of this.scrollPanel.items)e.setActive(t)}updateValue(){}update(t){super.update(t)}}
