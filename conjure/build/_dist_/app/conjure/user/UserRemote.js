import c from"./User.js";import h from"../screens/text/TextRenderer3D.js";import*as i from"https://cdn.skypack.dev/pin/three@v0.117.1-NetLzdTnw9ga3y6o633U/min/three.js";const m={CONNECT:0,DISCONNECT:1,UPDATE:2,MOVE:3,ANIMATION:4};export default class d extends c{constructor(e,t,n){super(e,!0);this.peerID=n,this.velocity=new i.Vector3,this.username=t.username,this.group.name=t.username,this.nameplate=new h(e,this.group,{text:this.username}),this.nameplate.group.position.setY(2),this.nameplate.group.rotation.set(0,Math.PI,0),this.nameplate.group.visible=this.username!=="undefined"&&this.username!=="",this.videoScreen=new i.Mesh(new i.PlaneBufferGeometry(1,.8),new i.MeshBasicMaterial({side:i.DoubleSide,transparent:!0})),this.videoScreen.position.setY(.6),this.nameplate.group.add(this.videoScreen),this.videoScreen.visible=!1,this.timeoutLimit=603*60,this.timeoutCount=0}getConnection(){try{let e=this.conjure.assetSync.transportPlugin._libp2p.connectionManager.connections.get(this.peerID);Array.isArray(e)&&(e=e[0]),this.rawConn||e.rawConn.on("stream",t=>{this.incomingStream=t,this.conjure.allowIncomingFeeds&&this.addVideo(t)}),this.rawConn=e.rawConn,this.addMedia=t=>{this.outgoingStream=t,this.rawConn.addStream(t)},this.removeMedia=()=>{this.outgoingStream&&(this.rawConn.removeStream(this.outgoingStream),this.outgoingStream=void 0)},this.conjure.userMediaStream&&this.addMedia(this.conjure.userMediaStream),this.rawConn._remoteStreams&&this.rawConn._remoteStreams.length>0&&(this.incomingStream=this.rawConn._remoteStreams[0],this.conjure.allowIncomingFeeds&&this.addVideo(this.incomingStream))}catch(e){console.log(e)}}getIncomingMediaStreams(){try{this.incomingStream&&this.conjure.allowIncomingFeeds?this.addVideo(this.incomingStream):this.video&&(this.video=void 0,this.videoScreen.visible=!1)}catch(e){console.log(e)}}addVideo(e){this.removeVideo();const t=document.createElement("video");this.videoScreen.material.map=new i.VideoTexture(t),this.videoScreen.material.map.format=i.RGBAFormat,this.soundObject=this.conjure.getAudioManager().createFromMediaSource(e,this.videoScreen,{refDistance:20}),this.videoScreen.visible=!0,this.video=t,"srcObject"in t?t.srcObject=e:t.src=window.URL.createObjectURL(e),t.play(),t.volume=0}removeVideo(){this.video&&(this.soundObject.destroy(),this.video.src=void 0,this.video.srcObject=void 0,this.video.removeAttribute("src"),this.video.removeAttribute("srcObject"),this.video.load(),this.video.remove(),delete this.video,this.removeMedia())}onCreate(){super.onCreate()}updateInfo(e){this.timeoutCount=0,e.username&&(this.username=e.username,this.nameplate.setText(this.username),this.nameplate.group.visible=this.username!=="undefined"&&this.username!=="")}update(e){if(this.timeoutCount++,this.timeoutCount>this.timeoutLimit){console.log(this.group.name+" has timed out"),this.conjure.getWorld().onUserLeave(this.peerID);return}this.group.position.set(this.group.position.x+this.velocity.x*e.delta,this.group.position.y+this.velocity.y*e.delta,this.group.position.z+this.velocity.z*e.delta)}setPhysics(e){this.timeoutCount=0,this.group.position.set(e.position.x*.01,e.position.y*.01,e.position.z*.01),this.group.quaternion.set(e.rotation.x*.01,e.rotation.y*.01,e.rotation.z*.01,e.rotation.w*.01),this.velocity.set(e.velocity.x*.01,e.velocity.y*.01,e.velocity.z*.01)}destroy(){this.removeVideo(),this.removeMedia(),this.conjure.scene.remove(this.group)}async makeConnection(e){const t=await new Promise(async n=>{try{const s=this.conjure.assetSync.networkPlugin.getPeerID()>e,o=await this.conjure.assetSync.connectionPlugin.createConnection(e,s);console.log("isInitiator",s),o.on("ready",()=>{n(!0)}),o.on("error",()=>n(!1)),o.on("close",()=>n(!1)),s&&this.conjure.world.realm.sendTo("connection.signal."+this.conjure.assetSync.networkPlugin.getPeerID(),o.peerData,e),this.conjure.world.realm.database.on("connection.signal."+e,async(r,a)=>{if(console.log("connection.signal."+e),a!==e)return;o.signal(r),o.on("signal",()=>{this.conjure.world.realm.sendTo("connection.signal."+this.conjure.assetSync.networkPlugin.getPeerID(),o.peerData,e)})})}catch(s){console.log("CONNECTION ERROR",s),n(!1)}});t?console.log("Direct connection establish to",e):console.log("Could not establish direct connection to",e,". Falling back to libp2p.")}}
