import*as e from" https://cdn.skypack.dev/pin/three@v0.123.0-STd7XeVUbImsNuMmqKGL/min/three.js";import{number as r}from"../util/number.js";import{CONJURE_MODE as l}from"../Conjure.js";export default class u{constructor(t,i,s){this.offset=new e.Vector3(0,i.eyeHeight,.1),this.sensitivity=new e.Vector2(.5,.5),this.radius=8,this.targetRadius=0,this.interpolationFactor=.1,this.theta=0,this.phi=0,this.conjure=t,this.camera=t.camera,this.user=i,this.domElement=s,this.controlsEnabled=!1,this.moveSensitivity=50,this.moveDamp=10,this.zoomSensitivity=.25,this.minDistance=.01,this.maxDistance=8,this.zoom=this.minDistance,this.forward=!1,this.backward=!1,this.left=!1,this.right=!1,this.sprint=!1,this.crouch=!1,this.jump=!1,this.canJump=!1,this.mouseX=0,this.mouseY=0,this.lastMouseX=0,this.lastMouseY=0,this.velocity=new e.Vector3,this.direction=new e.Vector3,this.raycaster=new e.Raycaster(new e.Vector3,new e.Vector3(0,-1,0),0,10),this.isLocked=!1,this.lockEvent={type:"lock"},this.unlockEvent={type:"unlock"},this.PI_2=Math.PI/2,this.vec=new e.Vector3,this.euler=new e.Euler(0,0,0,"YXZ"),this.onMouseMove=this.onMouseMove.bind(this),this.onPointerlockChange=this.onPointerlockChange.bind(this),this.onPointerlockError=this.onPointerlockError.bind(this),this.onMouseWheel=this.onMouseWheel.bind(this),document.addEventListener("wheel",this.onMouseWheel,!1),this.conjure.on("conjure:mode",o=>{o===l.EXPLORE?this.connect():this.disconnect()})}onMouseMove(t){}updateCamera(t,i){const s=this.user.group.position.clone().add(this.offset);this.theta-=t*(this.sensitivity.x/2),this.theta%=360,this.phi+=i*(this.sensitivity.y/2),this.phi=Math.min(85,Math.max(-85,this.phi)),this.radius=e.MathUtils.lerp(this.radius,this.targetRadius,this.interpolationFactor),this.radius<this.minDistance&&(this.radius=this.minDistance),this.camera.position.x=s.x+this.radius*Math.sin(this.theta*Math.PI/180)*Math.cos(this.phi*Math.PI/180),this.camera.position.y=s.y+this.radius*Math.sin(this.phi*Math.PI/180),this.camera.position.z=s.z+this.radius*Math.cos(this.theta*Math.PI/180)*Math.cos(this.phi*Math.PI/180),this.camera.updateMatrix(),this.camera.lookAt(s)}update({input:t,delta:i}){if(this.forward=t.isDown("FORWARD"),this.left=t.isDown("LEFT"),this.backward=t.isDown("BACKWARD"),this.right=t.isDown("RIGHT"),this.sprint=t.isDown("SHIFT",!0),this.crouch=t.isDown("CONTROL",!0),t.isPressed("JUMP")&&this.user.jump(),this.raycaster.ray.origin.copy(this.camera.position),!this.user.group.body)return;if(this.user.group.body.setAngularVelocityY(0),this.controlsEnabled){t.isPressed("MOUSELEFT",!0)&&this.conjure.conjureMode===l.EXPLORE&&this.lock(),this.updateCamera(t.mouseDelta.x,t.mouseDelta.y);const s=this.camera.getWorldDirection(this.vec);let o=Math.atan2(s.x,s.z)-Math.PI;const a=this.user.group.getWorldDirection(this.vec),c=Math.atan2(a.x,a.z);o>Math.PI&&(o-=Math.PI*2),o<-Math.PI&&(o+=Math.PI*2);const h=Math.abs(o-c);let n=16,m=Math.PI/128;h>Math.PI/6?this.user.turnedTooMuch=!0:this.user.turnedTooMuch=!1,h>m?(h>Math.PI&&(n*=-1),o<c&&(n*=-1),this.user.animMovementLock||this.user.group.body.setAngularVelocityY(n*Math.min(h,Math.PI*.15)*(this.user.currentAnimation==="falling"?.2:1))):(this.user.group.body.setAngularVelocityY(0),this.user.animMovementLock||this.user.group.body.setRotation(this.user.group.body.x,s.y,this.user.group.body.z))}this.velocity.x-=this.velocity.x*this.moveDamp*i,this.velocity.y-=this.velocity.y*this.moveDamp*i,this.velocity.z-=this.velocity.z*this.moveDamp*i,this.controlsEnabled&&(Math.abs(this.velocity.x)<.01&&(this.velocity.x=0),Math.abs(this.velocity.y)<.01&&(this.velocity.y=0),Math.abs(this.velocity.z)<.01&&(this.velocity.z=0),this.direction.x=r(this.right)-r(this.left),this.direction.z=r(this.forward)-r(this.backward),this.direction.normalize(),(this.forward||this.backward)&&(this.velocity.z-=this.direction.z*this.moveSensitivity*i),(this.left||this.right)&&(this.velocity.x-=this.direction.x*this.moveSensitivity*i)),this.user.animMovementLock||(this.speedMulti=this.user.onGround&&this.sprint?1.6:.5,this.moveRight(-this.velocity.x*this.speedMulti*.6),this.moveForward(-this.velocity.z*this.speedMulti)),this.zoom>this.minDistance*2,this.raycaster.ray.direction.copy(this.getDirection(this.vec).normalize()),this.zoom<3&&this.user.setTransparency(this.zoom<=this.minDistance?0:this.zoom),this.lastMouseX=t.mouse.x,this.lastMouseY=t.mouse.y}moveForward(t){this.vec.setFromMatrixColumn(this.camera.matrix,0),this.vec.crossVectors(this.camera.up,this.vec),this.vec.multiplyScalar(t),this.user.group.body.setVelocity(this.user.group.body.velocity.x+this.vec.x,this.user.group.body.velocity.y,this.user.group.body.velocity.z+this.vec.z)}moveRight(t){this.vec.setFromMatrixColumn(this.camera.matrix,0),this.vec.multiplyScalar(t),this.user.group.body.setVelocity(this.vec.x,this.user.group.body.velocity.y,this.vec.z)}onPointerlockChange(){if(!this.controlsEnabled)return;document.pointerLockElement===this.domElement?(this.lock(),this.isLocked=!0):(this.unlock(),this.isLocked=!1)}onPointerlockError(){console.log("AvatarControls.js: Unable to use Pointer Lock API")}connect(){document.addEventListener("mousemove",this.onMouseMove,!1),document.addEventListener("pointerlockchange",this.onPointerlockChange,!1),document.addEventListener("pointerlockerror",this.onPointerlockError,!1),this.controlsEnabled=!0,this.lock()}disconnect(t){document.removeEventListener("mousemove",this.onMouseMove,!1),document.removeEventListener("pointerlockchange",this.onPointerlockChange,!1),document.removeEventListener("pointerlockerror",this.onPointerlockError,!1),this.unlock(),this.controlsEnabled=!1}dispose(){this.disconnect()}getDirection(){let t=new e.Vector3(0,0,-1);return t.applyQuaternion(this.camera.quaternion),t}lock(){this.domElement.requestPointerLock()}unlock(){document.exitPointerLock()}zoomIn(){this.zoom>this.minDistance&&(this.zoom-=this.zoomSensitivity),this.zoom<this.minDistance&&(this.zoom=this.minDistance)}zoomOut(){this.zoom<this.maxDistance&&(this.zoom+=this.zoomSensitivity),this.zoom>this.maxDistance&&(this.zoom=this.maxDistance)}onMouseWheel(t){if(!this.controlsEnabled)return;var i=0;t.wheelDelta?i=t.wheelDelta:t.detail&&(i=-t.detail),i>0?this.zoomOut():i<0&&this.zoomIn(),this.targetRadius=this.zoom}}
