import*as r from" https://cdn.skypack.dev/pin/three@v0.123.0-STd7XeVUbImsNuMmqKGL/min/three.js";import{TransformControls as n}from"./TransformControls.js";import{OrbitControls as i}from"./OrbitControls.js";import{CONJURE_MODE as a}from"../../Conjure.js";import l from"../../../../../web_modules/events.js";import{iterateChildrenWithFunction as o}from"../../util/iterateRecursive.js";export default class h extends l{constructor(t){super();this.world=t,this.conjure=t.conjure,this.enabled=!1,this.transformObjects=[],this.lastTransformObject=void 0,this.objectGroups=[],this.orbitControls=new i(this.conjure.camera,this.conjure.renderer.domElement),this.orbitControls.target.copy(t.user.focusPoint.position),this.orbitControls.enabled=!1,this.transformControls=new n(this.conjure.camera,this.conjure.renderer.domElement),this.transformControls.addEventListener("dragging-changed",e=>{console.log("dragging-changed",e),this.orbitControls.enabled=!e.value}),this.transformControls.enabled=!1,this.conjure.scene.add(this.transformControls),this.conjure.on("conjure:mode",e=>{e===a.BUILD?(this.enabled=!0,this.transformControls.enabled=!0,this.orbitControls.enabled=!0,this.orbitControls.update()):(this.enabled=!1,this.transformControls.objects!==[]&&(this.lastTransformObject=this.transformControls.objects[0],this.detachAll()),this.transformControls.enabled=!1,this.orbitControls.enabled=!1)}),this.storageBodyType=null,this.translationSnap=.5}getSelectedObject(){return this.transformControls.objects.length?this.transformControls.objects[0]:void 0}addTransformObject(t,e){this.transformObjects.push(t),this.transformControls.objects.length&&(this.lastTransformObject=this.transformControls.objects[0]),e&&this.attach(t,{detachOthers:!0})}createGroup(){if(this.transformControls.objects.length>1){let t=new r.Group;for(let e of this.transformControls.objects)e.parent.remove(e),t.add(e);this.conjure.scene.add(t),this.detachAll()}}attach(t,e={}){console.log(t),e.detachOthers&&this.detachAll(),o(t,s=>{s.body&&this.conjure.physics.destroy(s.body)}),this.transformControls.attach(t),this.conjure.postProcessing.addSelectedObject(t),this.emit("selected",this.getSelectedObject())}detachAll(t={}){if(t.isDeleting)for(let e of this.transformControls.objects)this.conjure.getWorld().destroyObject(e);else for(let e of this.transformControls.objects)o(e,s=>{this.conjure.getWorld().realm.restorePhysics(s)}),e.userData.needsUpdate=!0;this.transformControls.detachAll(),this.conjure.postProcessing.clearSelectedObjects(),this.emit("selected",this.getSelectedObject())}detach(t,e={}){this.transformControls.detach(t),t.userData.needsUpdate=!0,this.conjure.postProcessing.removeSelectedObject(t),this.emit("selected",this.getSelectedObject())}lookAt(t){if(!t)return;let e=t.position.getWorldPosition(this.vec3);this.camera.lookAt(e.x,e.y,e.z),this.orbitControls.target.copy(e),this.orbitControls.update()}update(t){if(!this.enabled)return;if(t.input.isPressed("q",!0)&&this.transformControls.setSpace(this.transformControls.space==="local"?"world":"local"),t.input.isPressed("SHIFT",!0)&&(this.transformControls.setTranslationSnap(this.translationSnap),this.transformControls.setRotationSnap(r.MathUtils.degToRad(15)),this.transformControls.setScaleSnap(.25)),t.input.isReleased("SHIFT",!0)&&(this.transformControls.setTranslationSnap(null),this.transformControls.setRotationSnap(null),this.transformControls.setScaleSnap(null)),t.input.isPressed("w",!0)&&this.transformControls.setMode("translate"),t.input.isPressed("e",!0)&&this.transformControls.setMode("rotate"),t.input.isPressed("r",!0)&&this.transformControls.setMode("scale"),t.input.isPressed("g",!0)&&this.createGroup(),(t.input.isPressed("+",!0)||t.input.isPressed("=",!0))&&this.transformControls.setSize(this.transformControls.size+.1),(t.input.isPressed("-",!0)||t.input.isPressed("_",!0))&&this.transformControls.setSize(Math.max(this.transformControls.size-.1,.1)),t.input.isPressed("x",!0)&&(this.transformControls.showX=!this.transformControls.showX),t.input.isPressed("y",!0)&&(this.transformControls.showY=!this.transformControls.showY),t.input.isPressed("z",!0)&&(this.transformControls.showZ=!this.transformControls.showZ),t.input.isPressed("SPACEBAR",!0)&&(this.transformControls.enabled=!this.transformControls.enabled),this.transformControls.enabled){let e=t.mouseRaycaster.intersectObjects(this.transformObjects,!0);if(e.length>0&&(t.input.isPressed("MOUSELEFT",!0)&&!this.transformControls.axis)){let s=this.conjure.world.realm.objectManager.getTopGroupObject(e[0].object);s&&(t.input.isDown("CONTROL",!0)?this.attach(s):(this.transformControls.hasAnyAttached()&&(this.lastTransformObject=this.transformControls.isAttached(s)?s:this.lastTransformObject),this.transformControls.isAttached(s)?this.detach(s):this.attach(s,{detachOthers:!0})))}}}}
