import*as l from" https://cdn.skypack.dev/pin/three@v0.123.0-STd7XeVUbImsNuMmqKGL/min/three.js";import h from"../text/TextRenderer3D.js";import{easyPlane as n}from"../../util/MeshTemplates.js";import o from"./ScreenElementBase.js";export default class r extends o{constructor(e,t,s={}){super(e,t,s);this.tree=s.tree,this.selectable=s.selectable,this.button=n({width:s.width,height:s.height},{color:16777215}),this.button.castShadow=!1,this.button.receiveShadow=!1,this.button.material.transparent=!0,this.button.material.opacity=.1,this.group.add(this.button),this.textObj=new h(e.screenManager.conjure,this.group,{string:"button",x:-this.width/2+.05,anchorX:"left",fit:{x:this.width-.025,y:this.height-.025},scale:.75}),this.textObj.group.position.set(.05,.01,0),this.selected=!1,this.value="",this.uncollapsed=!0;let i=new l.PlaneBufferGeometry(.03,.03,1,1),a=new l.MeshBasicMaterial({side:l.DoubleSide,color:16777215});this.arrow=new l.Mesh(i,a),this.arrow.position.set(-this.width/2+.05,0,0),this.group.add(this.arrow),this.setSelected=this.setSelected.bind(this),this.selected=!1,this.items=[]}setSelected(e,t={}){this.selected=e,this.onSelectedCallback&&!t.ignoreCallback&&this.onSelectedCallback(e,this.onSelectedCallbackArgs),e?this.addBorder():this.removeBorder()}addItem(e){this.items.push(e)}toggle(){this.uncollapsed=!this.uncollapsed,this.arrow.rotation.set(0,0,this.uncollapsed?0:Math.PI/4)}setReference(e){this.reference=e}setHidden(e){super.setHidden(e)}setValue(e){this.value=String(e),this.setText(this.value)}getValue(){return this.value}setActive(e){super.setActive(e)}setText(e){this.textObj.setText(e)}addIcon(e){}setOnSelectedCallback(e,t){this.onSelectedCallbackArgs=t,this.onSelectedCallback=e}setOnHoverCallback(e,t){this.onHoverCallbackArgs=t,this.onHoverCallback=e}setOnClickCallback(e,t){this.onClickCallbackArgs=t,this.onClickCallback=e}update(e){for(let i=0;i<this.elements.length;i++)this.elements[i].update(e);for(let i=0;i<this.htmlObjects.length;i++)this.htmlObjects[i].update(e);if(this.disabled)return;if(!this.active)return;let t=e.mouseRaycaster.intersectObject(this.arrow,!1),s=!1;t.length>0&&(s=!0,e.input.isPressed("MOUSELEFT",!0)&&(this.toggle(),this.onClickCallback&&this.onClickCallback(this.onClickCallbackArgs))),t=e.mouseRaycaster.intersectObject(this.targetBounds,!1),t.length>0?(this.hover(this,!0),!s&&e.input.isPressed("MOUSELEFT",!0)&&this.click(this,!0)):(e.input.isPressed("MOUSELEFT",!0)&&this.click(this,!1),this.hover(this,!1)),e.input.isReleased("MOUSELEFT",!0)&&this.click(this,!1)}setDisabled(e){super.setDisabled(e),e?this.button.material.opacity=.2:this.button.material.opacity=.5}endDrag(e){for(let t of e)t.mouseOver&&t instanceof r&&(t.reference&&t.reference!==this.reference&&t!==this&&this.tree.collapsibleDragCallback&&(this.tree.collapsibleDragCallback(t.reference,this.reference)&&this.tree.refresh()));this.screen.draggingElementOriginator=void 0}onClick(e){if(this.disabled)return;this.button.material.opacity=.8,this.reference&&(this.screen.draggingElementOriginator=this),this.selectable&&this.setSelected(!this.selected)}onUnClick(e){if(this.disabled)return;this.button.material.opacity=.5,this.reference&&(this.screen.draggingElementOriginator=void 0)}onMouseOver(e){if(this.disabled)return;this.button.material.opacity=.5,this.onHoverCallback&&this.onHoverCallback(!0,this.onHoverCallbackArgs)}onMouseOut(e){if(this.disabled)return;this.button.material.opacity=.2,this.onHoverCallback&&this.onHoverCallback(!1,this.onHoverCallbackArgs)}}
