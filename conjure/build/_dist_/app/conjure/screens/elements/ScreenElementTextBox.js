import{easyPlane as s}from"../../util/MeshTemplates.js";import"../../util/HTMLObject.js";import a from"./ScreenElementBase.js";import" https://cdn.skypack.dev/pin/three@v0.123.0-STd7XeVUbImsNuMmqKGL/min/three.js";import l from"../../../../../web_modules/three-typeable-text.js";export default class h extends a{constructor(t,e,i={}){super(t,e,i);this.background=s({width:this.width,height:this.height},{color:2524671,transparent:!0,opacity:.2}),this.background.castShadow=!1,this.background.receiveShadow=!1,this.onClickCallback=i.callback,this.group.add(this.background),this.updateValue=this.updateValue.bind(this),this.textObj=new l({camera:t.camera,font:t.conjure.getDefaultFont(),string:i.string||i.text||"",fontScale:.04,onChange:this.updateValue}),this.textObj.getObject().position.setY(-.025),this.textObj.getObject().position.setZ(.025),this.group.add(this.textObj.getObject())}setValue(t){this.value=String(t),this.setText(this.value)}setSubject(t){this.subject=t,this.setValue(this.subject)}updateValue(t){this.value=String(t),this.onChangeCallback&&this.onChangeCallback(this.getValue())}setOnExitCallback(t){this.onExitCallback=t}setOnChangeCallback(t){this.onChangeCallback=t}getValue(){return this.value}setText(t){this.textObj.setText(t)}setActive(t){super.setActive(t),t||this.edit(!1)}getIsFocused(){return this.focused}edit(t){if(this.focused===t)return;this.focused=t,this.screen.screenManager.conjure.input.setEnabled(!t),this.textObj.actionFocus(t)}update(t){if(super.update(t),this.disabled)return;if(!this.active)return;this.textObj.updateCursor(),t.input.isPressed("ENTER",!0,!0)&&(this.focused&&this.onClickCallback&&this.onClickCallback(this.onClickCallbackArgs,this.getValue()),this.edit(!1)),t.input.isDown("CONTROL",!0)&&(t.input.isPressed("V",!0)&&navigator.clipboard.readText().then(e=>this.setValue(e)))}setOnClickCallback(t,e){this.onClickCallbackArgs=e,this.onClickCallback=t}setDisabled(t){super.setDisabled(t)}onClick(t){if(this.disabled)return;this.edit(this.mouseOver)}onClickOutside(t){if(this.disabled)return;this.edit(!1)}onUnClick(t){if(this.disabled)return}onMouseOver(t){if(this.disabled)return}onMouseOut(t){if(this.disabled)return}}
